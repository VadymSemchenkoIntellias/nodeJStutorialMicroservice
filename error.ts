export enum ErrorCode {
    ALREADY_LOGGED_OUT = 'ALREADY_LOGGED_OUT',
    REFRESH_TOKEN_IS_NOT_VALID = 'REFRESH_TOKEN_IS_NOT_VALID',
    TOKEN_EXPIRED = 'TOKEN_EXPIRED',
    USER_LOGGED_OUT = 'USER_LOGGED_OUT',
    INVALID_CREDENTIALS = 'INVALID_CREDENTIALS',
    EMAIL_ALREADY_REGISTERED = 'EMAIL_ALREADY_REGISTERED',
    ALREADY_LOGGED_IN = 'ALREADY_LOGGED_IN',
    NO_AUTH_HEADER_PROVIDED = 'NO_AUTH_HEADER_PROVIDED',
    INVALID_AUTH_HEADER_PROVIDED = 'INVALID_AUTH_HEADER_PROVIDED',
    TOKEN_IS_NOT_ACTUAL = 'TOKEN_IS_NOT_ACTUAL',
    UNHANDLED_SERVER_ERROR = 'UNHANDLED_SERVER_ERROR',
    USER_NOT_FOUND = 'USER_NOT_FOUND'
}

export default class ResponseError extends Error {

    code: ErrorCode;

    constructor(code: ErrorCode, message: string) {
        super(message);
        this.code = code;
    }
}